@import './variables';

@mixin respond($breakpoint) {
  $query: map-get($breakpoints, $breakpoint);
  @if not $query {
    @error 'No value found for `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
  }
  @media #{if(type-of($query) == 'string', unquote($query), inspect($query))} {
    @content;
  }
}

@mixin position($w, $m) {
  width: $w;
  margin: $m;
}

@mixin flex($fd, $jc, $ai) {
  display: flex;
  flex-direction: $fd;
  justify-content: $jc;
  align-items: $ai;
}

@mixin input($b, $mb) {
  @include position(170px, 0 0 $mb 0);
  padding: $indentInputAndButton;
  color: $title-text;
  background: $b;
  border-radius: $radiusMin;
  font-size: $small-fz;
  @include respond($tabletMin) {
    width: 150px;
  }
}

@mixin selectionContainer($containerW, $p, $imageW, $fs, $fsHover) {
  width: $containerW;
  padding: $p;
  border-radius: $radiusMax;
  box-shadow: 0 0 10px 0;
  transition: all 0.25s linear;
  img {
    width: $imageW;
  }
  .typeName {
    color: $title-text;
    text-align: center;
    font-size: $fs;
    transition: all 0.25s linear;
    margin: $indentMin 0 0 0;
  }
  &:hover {
    cursor: pointer;
    outline: 1px solid $blue;
    box-shadow: 0 0 10px 0 $blue;
    .typeName {
      color: $blue;
      font-size: $fsHover;
    }
  }
}

@mixin letter($letter, $color) {
  content: $letter;
  position: absolute;
  color: $color;
  width: 0;
  overflow-x: hidden;
  transition: width 0.25s linear;
}

%title-pages {
  color: $title-text;
  margin: 0 0 $indentMin 0;
  font-size: $extra-large-fz;
  font-weight: 400;
  @include respond($mobile) {
    text-align: center;
    margin: 0 0 $indentInputAndButton 0;
  }
}

%mini-title {
  color: $title-text;
  margin: 0 0 $indentMin 0;
  font-size: $large-fz;
  font-weight: 400;
  text-align: center;
  @include respond($mobile) {
    margin: 0 0 $indentInputAndButton 0;
  }
}

%button {
  @include position(170px, $indentInputAndButton 0);
  padding: $indentInputAndButton;
  color: $button-text;
  background: $green;
  border-radius: $radiusMax;
  font-family: inherit;
  font-size: $small-fz;
  text-align: center;
  transition: all 0.25s linear;
  &:hover {
    cursor: pointer;
    background: $blue;
  }
  @include respond($tabletMin) {
    width: 150px;
  }
}

%closeButton {
  background: none;
  font-size: $tablet-min-fz;
  position: absolute;
  top: 5px;
  transition: all 0.25s linear;
}

%closeButtonHover {
  &:hover {
    cursor: pointer;
    color: $blue;
    font-size: $laptop-fz;
    font-weight: 700;
  }
}

%chartContainer {
  @include flex(column, center, null);
  flex-grow: 1;
  .imageContainer {
    @include flex(null, center, center);
    box-sizing: content-box;
    padding: $indentMin;
    border-radius: $radiusMax;
    box-shadow: 0 0 10px 0;
    width: 750px;
    height: 450px;
    @include respond($laptop) {
      width: 700px;
      height: 420px;
    }
    @include respond($tabletMin) {
      box-sizing: border-box;
      width: 100%;
      height: 100%;
    }
  }
}
